name: Publish PR Build to DevSite/Strapi/Docs
run-name: Deploy after PR merge to main (merged by ${{ github.actor }})
on:
  push:
    branches:
      - "main"

jobs:
  check-files-changed:
    runs-on: ubuntu-latest
    outputs:
      cms_changed: ${{ steps.check_files_changed.outputs.cms_changed }}
      frontend_changed: ${{ steps.check_files_changed.outputs.frontend_changed }}
      docs_changed: ${{ steps.check_files_changed.outputs.docs_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - shell: pwsh
        id: check_files_changed
        run: |
          # Check if a file under cms/, docs/, or frontend/ has changed
          $HasCmsDiff = (git diff --name-only HEAD^ -- cms/).Length -gt 0
          $HasFrontendDiff = (git diff --name-only HEAD^ -- frontend/).Length -gt 0
          $HasDocsDiff = (git diff --name-only HEAD^ -- docs/).Length -gt 0

          Write-Host "Found cms/ changed: $HasCmsDiff"
          Write-Host "Found frontend/ changed: $HasFrontendDiff"
          Write-Host "Found docs/ changed: $HasDocsDiff"
          # Supposed to use env variables method but couldn't get it to work
          # $env:GITHUB_OUTPUT = "cms_changed::$HasCmsDiff"
          # $env:GITHUB_OUTPUT = "frontend_changed::$HasFrontendDiff"
          # $env:GITHUB_OUTPUT = "docs_changed::$HasFrontendDiff"

          # So still using the deprecated set-output method for now 
          Write-Host "::set-output name=cms_changed::$HasCmsDiff"
          Write-Host "::set-output name=frontend_changed::$HasFrontendDiff"
          Write-Host "::set-output name=docs_changed::$HasDocsDiff"

  build-cms:
    runs-on: ubuntu-latest
    needs: [check-files-changed]
    if: needs.check-files-changed.outputs.cms_changed == 'True'
    concurrency:
      group: deploy-cms
      cancel-in-progress: true
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: Validate Strapi
        run: | 
          cd ${{ github.workspace }}/cms
          npm install
          npm run build
          npm run strapi policies:list
          npm run strapi middlewares:list
          npm run strapi content-types:list
          npm run strapi hooks:list
          npm run strapi controllers:list
          npm run strapi services:list

  deploy-cms:
    runs-on: ubuntu-latest
    needs: [build-cms]
    concurrency:
      group: deploy-cms
      cancel-in-progress: true
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.CMS_SSH_PRIVATE_KEY }}
          known_hosts: "placeholder"
          name: id_rsa
      - name: Define known_hosts
        run: ssh-keyscan -H ${{ secrets.CMS_SSH_HOST }} >> ~/.ssh/known_hosts
      - name: git checkout
        uses: actions/checkout@v3
      - name: Sync files to server
        run: rsync -avzr --delete-after --exclude={'node_modules/','.env','build/','cron/','public/uploads/'} ./cms/ ${{ secrets.CMS_SSH_USER }}@${{ secrets.CMS_SSH_HOST }}:/home/${{ secrets.CMS_SSH_USER }}/annarbor-content
      - name: Confirm build is done
        run: |
          date '+%Y-%m-%d %T.%6N' > ./latest-build

          rsync -avz ./latest-build ./cms/scripts/build-if-new-server.sh ${{ secrets.CMS_SSH_USER }}@${{ secrets.CMS_SSH_HOST }}:/home/${{ secrets.CMS_SSH_USER }}/annarbor-content/cron/

  deploy-dev-site:
    needs: [check-files-changed]
    if: needs.check-files-changed.outputs.cms_changed == 'True'
    uses: ./.github/workflows/workflow-deploy-dev.yml
    secrets: inherit

  build-docs:
    runs-on: ubuntu-latest
    needs: [check-files-changed]
    if: needs.check-files-changed.outputs.docs_changed == 'True'
    concurrency:
      group: deploy-docs
      cancel-in-progress: true
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: Build Docs Server
        run: |
          cd ${{ github.workspace }}/docs
          sudo bash serve.sh
      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs/_book/

  deploy-docs:
    needs: [build-docs]
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-docs
      cancel-in-progress: true
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: Deploy Artifacts
        uses: actions/deploy-pages@v2
    permissions:
      contents: read
      pages: write
      id-token: write
