name: Publish Production Server
run-name: Production server deployment (kicked off by ${{ github.actor }})
on:
  push:
    branches:
      - "release"
jobs:
  check-files-changed:
    runs-on: ubuntu-latest
    outputs:
      cms_changed: ${{ steps.check_cms_files_changed.outputs.cms_changed }}
      frontend_changed: ${{ steps.check_frontend_files_changed.outputs.frontend_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - shell: pwsh
        id: check_cms_files_changed
        run: |
          # Check if a file under cms/ has changed
          $diff = git diff --name-only HEAD^ HEAD
          $SourceDiff = $diff | Where-Object { $_ -match '^cms/' }
          $HasDiff = $SourceDiff.Length -gt 0

          Write-Host $HasDiff
          # Supposed to use env variables method but couldn't get it to work
          # so still using the deprecated set-output method for now 
          Write-Host "::set-output name=cms_changed::$HasDiff"
          # $env:GITHUB_OUTPUT = "cms_changed::$HasDiff"
      - shell: pwsh
        id: check_frontend_files_changed
        run: |
          # Check if a file under frontend/ has changed
          $diff = git diff --name-only HEAD^ HEAD
          $SourceDiff = $diff | Where-Object { $_ -match '^frontend/' }
          $HasDiff = $SourceDiff.Length -gt 0

          Write-Host $HasDiff
          # Supposed to use env variables method but couldn't get it to work
          # so still using the deprecated set-output method for now 
          Write-Host "::set-output name=frontend_changed::$HasDiff"
          # $env:GITHUB_OUTPUT = "frontend_changed::$HasDiff"
  deploy-cms:
    runs-on: ubuntu-latest
    needs: [check-files-changed]
    if: needs.check-files-changed.outputs.cms_changed == 'True'
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.CMS_SSH_PRIVATE_KEY }}
          known_hosts: "placeholder"
          name: id_rsa
      - name: Define known_hosts
        run: ssh-keyscan -H ${{ secrets.CMS_SSH_HOST }} >> ~/.ssh/known_hosts
      - name: git checkout
        uses: actions/checkout@v3
      - name: Sync files to server
        run: rsync -avzr --delete-after --exclude={'node_modules/','.env','build/','cron/','public/uploads/'} ./cms/ ${{ secrets.CMS_SSH_USER }}@${{ secrets.CMS_SSH_HOST }}:/home/${{ secrets.CMS_SSH_USER }}/annarbor-content
      - name: Confirm build is done
        run: |
          date '+%Y-%m-%d %T.%6N' > ./latest-build

          rsync -avz ./latest-build ./cms/scripts/build-if-new-server.sh ${{ secrets.CMS_SSH_USER }}@${{ secrets.CMS_SSH_HOST }}:/home/${{ secrets.CMS_SSH_USER }}/annarbor-content/cron/
