name: Validate PR Builds
run-name: Validate PR Builds (${{ github.actor }})
on:
  pull_request:
    branches:
      - "main"
jobs:
  check-files-changed:
    runs-on: ubuntu-latest
    concurrency:
      group: pr-${{ github.ref }}
      cancel-in-progress: true
    outputs:
      cms_changed: ${{ steps.check_files_changed.outputs.cms_changed }}
      frontend_changed: ${{ steps.check_files_changed.outputs.frontend_changed }}
      docs_changed: ${{ steps.check_files_changed.outputs.docs_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - shell: pwsh
        id: check_files_changed
        run: |
          # Check if a file under cms/, docs/, or frontend/ has changed
          $HasCmsDiff = (git diff --name-only origin/main...HEAD -- cms/).Length -gt 0
          $HasFrontendDiff = (git diff --name-only origin/main...HEAD -- frontend/).Length -gt 0
          $HasDocsDiff = (git diff --name-only origin/main...HEAD -- docs/).Length -gt 0

          Write-Host "Found cms/ changed: $HasCmsDiff"
          Write-Host "Found frontend/ changed: $HasFrontendDiff"
          Write-Host "Found docs/ changed: $HasDocsDiff"
          # Supposed to use env variables method but couldn't get it to work
          # $env:GITHUB_OUTPUT = "cms_changed::$HasCmsDiff"
          # $env:GITHUB_OUTPUT = "frontend_changed::$HasFrontendDiff"
          # $env:GITHUB_OUTPUT = "docs_changed::$HasFrontendDiff"

          # So still using the deprecated set-output method for now 
          Write-Host "::set-output name=cms_changed::$HasCmsDiff"
          Write-Host "::set-output name=frontend_changed::$HasFrontendDiff"
          Write-Host "::set-output name=docs_changed::$HasDocsDiff"

  validate-cms:
    runs-on: ubuntu-latest
    needs: [check-files-changed]
    if: needs.check-files-changed.outputs.cms_changed == 'True'
    concurrency:
      group: deploy-cms
      cancel-in-progress: true
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.CMS_SSH_PRIVATE_KEY }}
          known_hosts: "placeholder"
          name: id_rsa
      - name: Define known_hosts
        run: ssh-keyscan -H ${{ secrets.CMS_SSH_HOST }} >> ~/.ssh/known_hosts
      - name: git checkout
        uses: actions/checkout@v3
      - name: Verify Strapi
        run: | 
          cd ${{ github.workspace }}/cms
          npm install
          npm run build
          npm run strapi policies:list
          npm run strapi middlewares:list
          npm run strapi content-types:list
          npm run strapi hooks:list
          npm run strapi controllers:list
          npm run strapi services:list

  validate-frontend:
    runs-on: ubuntu-latest
    needs: [check-files-changed]
    if: needs.check-files-changed.outputs.frontend_changed == 'True'
    concurrency:
      group: deploy-dev
      cancel-in-progress: true
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: "placeholder"
          name: id_rsa
      - name: Define known_hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: git checkout
        uses: actions/checkout@v3
      - name: Build Gatsby
        run: |
          cd ${{ github.workspace }}/frontend

          # Add env file
          echo 'STRAPI_TOKEN=${{ secrets.STRAPI_TOKEN }}' > ./.env.production
          echo 'STRAPI_API_URL=${{ secrets.STRAPI_SERVER }}' >> ./.env.production

          npm install
          NODE_ENV=production npm run build

  validate-docs:
    runs-on: ubuntu-latest
    needs: [check-files-changed]
    if: needs.check-files-changed.outputs.docs_changed == 'True'
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: Build Docs Server
        run: |
          cd ${{ github.workspace }}/docs
          sudo bash serve.sh
