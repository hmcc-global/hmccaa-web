name: Publish Docs
run-name: ${{ github.actor }} is deploying new changes to documentation
on:
  push:
    branches:
      - "main"
jobs:
  check-docs-changed:
    runs-on: ubuntu-latest
    outputs:
      docs_changed: ${{ steps.check_files_changed.outputs.docs_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - shell: pwsh
        id: check_files_changed
        run: |
          # Check if a file under docs/ has changed
          $diff = git diff --name-only HEAD^ HEAD
          $SourceDiff = $diff | Where-Object { $_ -match '^docs/' }
          $HasDiff = $SourceDiff.Length -gt 0

          Write-Host $HasDiff
          # Supposed to use env variables method but couldn't get it to work
          # so still using the deprecated set-output method for now 
          Write-Host "::set-output name=docs_changed::$HasDiff"
          # $env:GITHUB_OUTPUT = "docs_changed::$HasDiff"
  build:
    runs-on: ubuntu-latest
    needs: [check-docs-changed]
    if: needs.check-docs-changed.outputs.docs_changed == 'True'
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: Build Docs Server
        run: |
          cd ${{ github.workspace }}/docs
          sudo sh serve.sh
      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs/_book/
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: Deploy Artifacts
        uses: actions/deploy-pages@v2
    permissions:
      contents: read
      pages: write
      id-token: write
